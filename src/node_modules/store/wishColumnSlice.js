import { createSlice, current } from '@reduxjs/toolkit'

const wishColumnSlice = createSlice({
    name: 'wishColumns',
    initialState: {
        wishColumns: [],
        workSpaceWidth: 0,
        wishesToRender: [],
    },
    reducers: {
        setWorkSpaceWidth(state,{ payload }) {
            state.workSpaceWidth = payload;
        },
        addColumn(state) {
            if (current(state.wishesToRender).length) {
                state.wishColumns.push({
                    id: state.wishColumns.length,
                    wishes: [current(state.wishesToRender.shift())]
                });
            } else return state
        },
        resetColumns(state) {
            state.wishColumns = [];
        },
        removeColumn(state) {
            state.wishColumns.pop();
        },
        fillWaitList(state,{ payload }) {
            state.wishesToRender = [...payload];
        },
        takeWishToRender(state,{ payload }) {
            console.log('список к рендеру: ', current(state.wishesToRender), 'takeWishToRender fired with: ', payload);
            const wish = state.wishesToRender.shift();
            wish && state.wishColumns[ payload ].wishes.push( wish );
        }

    }
})

export const {
    setWorkSpaceWidth,
    addColumn,
    resetColumns,
    removeColumn,
    fillWaitList,
    popWaitList,
    addWishToColumn,
    takeWishToRender,
} = wishColumnSlice.actions;

export default wishColumnSlice.reducer;