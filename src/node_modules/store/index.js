import { configureStore, combineReducers } from '@reduxjs/toolkit'
import {
    persistReducer,
    FLUSH,
    REHYDRATE,
    PAUSE,
    PERSIST,
    PURGE,
    REGISTER,
  } from 'redux-persist'
import storage from 'redux-persist/lib/storage'

import wishesReducer from 'store/wishesSlice'
import wishlistReducer from 'store/wishlistSlice'
import multiColumnTapeLayoutReducer from 'store/mCTLayoutSlice'
import highlighterReducer from 'store/highlighterSlice'
import userReducer from 'store/userSlice'
import sliderReducer from 'store/sliderSlice'
import historyReducer from 'store/historySlice'

const rootReducer = combineReducers({
    wishes: wishesReducer,
    wishlists: wishlistReducer,
    mCTLayout: multiColumnTapeLayoutReducer,
    highlighters: highlighterReducer,
    users: userReducer,
    sliders: sliderReducer,
    history: historyReducer,
});

const persistConfig = {
    key: 'root',
    version: 1,
    storage,
    // blacklist: ['wishlists'], // switch on to allow clear local storages
};
const persistedReducer = persistReducer(persistConfig, rootReducer);

export default configureStore({
    reducer: persistedReducer,
    middleware: (getDefaultMiddleware) =>
      getDefaultMiddleware({
        serializableCheck: {
          ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],
        },
      }),
});