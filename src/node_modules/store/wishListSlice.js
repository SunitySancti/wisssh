import { createSlice, current } from '@reduxjs/toolkit'

import { wishlists } from 'api/mockWishlists'

const wishlistSlice = createSlice({
    name: 'wishlists',
    initialState: {
        all: wishlists,
        ofCurrentUser: [],
        ofOtherUsers: [],
    },
    reducers: {
        filterWishlistsByUser(state,{ payload }) {
            // payload: userName
            if(!current(state).all.length) return state;
            
            state.ofCurrentUser = current(state).all.filter(
                wishlist => wishlist.author === payload
            );
            state.ofOtherUsers = current(state).all.filter(
                wishlist => wishlist.author !== payload
            );
        },
        updateWishlistsWithNewWish(state,{ payload }) {
            // payload: {wish}
            state
                .all
                .filter(list => payload.wishlistIds.includes(list.id))
                .forEach(list => list.wishIds.push(payload.id));
            state
                .ofCurrentUser
                .filter(list => payload.wishlistIds.includes(list.id))
                .forEach(list => list.wishIds.push(payload.id));
        },
        pushNewWishlist(state,{ payload }) {
            // payload: {wishlist}
            state.all.push(payload);
            state.ofCurrentUser.push(payload);
        },
        deleteWishlistById(state,{ payload }) {
            // payload: wishlistId
            console.log('deleting is fire with: ', payload);
            state.all = current(state).all.filter(
                list => list.id != payload
            );
            state.ofCurrentUser = current(state).ofCurrentUser.filter(
                list => list.id != payload
            );
            state.ofOtherUsers = current(state).ofOtherUsers.filter(
                list => list.id != payload
            );
        },
        resetWishlists(state) {
            state = {
                all: wishlists,
                ofCurrentUser: [],
                ofOtherUsers: [],
            };
        },
    }
});

export const {
    filterWishlistsByUser,
    updateWishlistsWithNewWish,
    pushNewWishlist,
    deleteWishlistById,
    resetWishlists
} = wishlistSlice.actions;

export default wishlistSlice.reducer;