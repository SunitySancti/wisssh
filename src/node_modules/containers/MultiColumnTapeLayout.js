import React, { useEffect, useLayoutEffect } from 'react'
import { useDispatch, useSelector } from 'react-redux'
import { createUseStyles } from 'react-jss'

import { WishCard } from 'containers/WishCard'
import {
    clearItems,
    fillRenderList,
    takeItemToRender,
    setColumnsQtyAndWidth,
    resetColumns,
} from 'store/mCTLayoutSlice'

export const styleVars = {
    outerSpacing: 0,
    innerSpacing: 22,
    columnMinWidth: 250,
    columnMaxWidth: 330
}

const useStyles = createUseStyles({
    container: {
        display: 'flex',
        width: '100%',
        padding: `0 ${styleVars.outerSpacing}px`,
        gap: `${styleVars.innerSpacing}px`
    },
    column: {
        width: '100%',
        maxWidth: `${styleVars.columnMaxWidth}px`,
        height: 'fit-content'
    },
    item: {
        marginBottom: `${styleVars.innerSpacing}px`
    }
})

export const MultiColumnTapeLayout = () => {
    const dispatch = useDispatch();
    const updateItemsRenderList = () => dispatch(fillRenderList());
    const takeItemToShortestColumn = () => dispatch(takeItemToRender());
    const updateColumnParams = () => dispatch(setColumnsQtyAndWidth());
    const initializeColumns = () => dispatch(resetColumns());
    
    const layout = useSelector(state => state.mCTLayout);
    const classes = useStyles();

    useEffect(() => {
        updateColumnParams();
        window.addEventListener('resize', updateColumnParams);
        return () => {
            window.removeEventListener('resize', updateColumnParams);
            dispatch(clearItems());
        }
    },[]);

    useLayoutEffect(() => {
        updateItemsRenderList();
        initializeColumns();
    },[layout.columnsQty, layout.items]);

    useEffect(() => {
        takeItemToShortestColumn();
    },[layout.itemsRenderList]);

    return (
        <div className={classes.container + ' mct-layout'}>
            {layout.columns.map((column, index) => 
                <div key={index} className={ classes.column + ' mct-column' }>
                    {column.map((item, index) =>
                        <WishCard
                            wish={ item }
                            key={ index }
                            className={ classes.item }
                        />
                     )}
                </div> 
             )}
        </div>
    )
}