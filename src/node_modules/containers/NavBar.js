import React, { useEffect } from 'react'
import { NavLink, useMatch, useParams } from 'react-router-dom'
import { Outlet } from 'react-router'
import { useDispatch } from 'react-redux'

import { ModeToggle } from 'components/ModeToggle'
import { Highlighter } from 'components/Highlighter'
import { setHighlighterCoordsInNavBar } from 'store/highlighterSlice'



export const NavBar = () => {
    const isMyWishesTab = !! (useMatch({
        path: '/my-wishes',
        end: false,
    }));
    const matchWishesItemsPath = useMatch({
        path: '/my-wishes/items',
        end: false,
    });
    const matchInvitesItemsPath = useMatch({
        path: '/my-invites/items',
        end: false,
    });
    const isItemsMode = !!( matchWishesItemsPath || matchInvitesItemsPath )

    const location = isMyWishesTab && isItemsMode
        ? 'wishes-items' : isMyWishesTab && !isItemsMode
        ? 'wishes-lists' : !isMyWishesTab && isItemsMode
        ? 'invites-items' : !isMyWishesTab && !isItemsMode
        ? 'invites-lists' : undefined;

    const { wishlistId, wishId } = useParams();

    const Option = ({ to, children }) => {
        return (
            <NavLink
                to={ to }
                className='nav option'
                end
            >
                { children }
            </NavLink>
        );
    }
    const Slash = () => <div className='nav'>/</div>

    let BreadCrumbs;

    switch (location) {
        case 'wishes-items':
            BreadCrumbs = () => (
                <div className='bread-crumbs'>
                    <Highlighter location='navbar'/>
                    <Option to='/my-wishes/items/actual'>Актуальные</Option>
                    <Option to='/my-wishes/items/completed'>Исполненные</Option>
                    <Option to='/my-wishes/items/all'>Все</Option>
                </div>
            );
            break;
        case 'wishes-lists':
            BreadCrumbs = () => (
                <div className='bread-crumbs'>
                    <Highlighter location='navbar'/>
                    <Option to='/my-wishes/lists/'>Вишлисты</Option>
                    
                    { wishlistId && <Slash/> }
                    { wishlistId &&
                    <Option to={`/my-wishes/lists/${wishlistId}`}>{ wishlistId }</Option>}
                    
                    { wishId && <Slash/> }
                    { wishId &&
                    <Option to={`/my-wishes/lists/${wishlistId}/${wishId}`}>{ wishId }</Option>}
                </div>
            );
            break;
        case 'invites-items':
            BreadCrumbs = () => (
                <div className='bread-crumbs'>
                    <Highlighter location='navbar'/>
                    <Option to='/my-invites/items/reserved'>Зарезервированные</Option>
                    <Option to='/my-invites/items/presented'>Подаренные</Option>
                    <Option to='/my-invites/items/all'>Все</Option>
                </div>
            );
            break;
        case 'invites-lists':
            BreadCrumbs = () => (
                <div className='bread-crumbs'>
                    <Highlighter location='navbar'/>
                    <Option to='/my-invites/lists/'>Вишлисты</Option>

                    { wishlistId && <Slash/> }                    
                    { wishlistId &&
                    <Option to={`/my-invites/lists/${wishlistId}`}>{ wishlistId }</Option>}
                    
                    { wishId && <Slash/> }
                    { wishId &&
                    <Option to={`/my-invites/lists/${wishlistId}/${wishId}`}>{ wishId }</Option>}
                </div>
            );
            break;
        default:
            break;
    }

    
    const dispatch = useDispatch();
    useEffect(() => {
        dispatch(setHighlighterCoordsInNavBar())
    })

    return (
        <div className='app-body'>
            <div className='content-header'>
                <div className='nav-bar'>
                    <ModeToggle
                        isMyWishesTab={ isMyWishesTab }
                        isItemsMode={ isItemsMode }
                    />
                    <BreadCrumbs/>
                </div>
            </div>
            <div className='work-space'>
                <Outlet/>
            </div>
        </div>
    )
}