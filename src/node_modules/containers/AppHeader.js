import React, { useEffect, useLayoutEffect } from 'react'
import { Link, useLocation } from 'react-router-dom'
import { Outlet } from 'react-router'
import { useDispatch, useSelector } from 'react-redux'

import { LogoIcon, LogoBack, Gratitude } from 'components/Icon'
import { IconButton } from 'components/IconButton'
import { Icon } from 'components/Icon'
import { Highlighter, Goo } from 'components/Highlighter'
import { switchSectionSlider } from 'store/sliderSlice'
import { User } from 'components/User'

export const AppHeader = () => {
    const currentSection = useLocation().pathname.split('/').at(1);
    const currentMode = useLocation().pathname.split('/').at(2);
    const currentUser = useSelector(state => state.users.current)
    const myWishesSection = useSelector(state => state.history.myWishesSection);
    const myInvitesSection = useSelector(state => state.history.myInvitesSection);
    const isMyWishes = currentSection === 'my-wishes';

    const firstSectionPath = currentMode ? myWishesSection[`${currentMode}ModeLast`] : '';
    const secondSectionPath = currentMode ? myInvitesSection[`${currentMode}ModeLast`] : '';

    let firstSectionTitle, secondSectionTitle = '';
    switch (currentMode) {
        case 'items':
            firstSectionTitle = 'Мои желания';
            secondSectionTitle = 'Желания друзей';
            break;
        case 'lists':
            firstSectionTitle = 'Мои вишлисты';
            secondSectionTitle = 'Вишлисты друзей';
    };

    const dispatch = useDispatch();
    const alignGooHighlighters = () => {
        const goo = document.querySelector('.goo-highlighters');
        const logo = document.querySelector('.logo-btn')?.getBoundingClientRect();
        if(!goo || !logo) return;
        goo.style.left = `${logo.x}px`;
        goo.style.width = `${logo.offsetWidth}px`;
    }
    const setTransitions = () => {
        document.querySelectorAll('.goo-highlighters .highlighter').forEach((elem) => {
            elem.classList.add('animated-long');
        });
    }
    const clearTransitions = () => {
        document.querySelectorAll('.goo-highlighters .highlighter').forEach ((elem) => {
        elem.classList.remove('animated-long');
    })}
    const handleLogoClick = () => {
        console.log('i wisssh u :::3')
    } 

    useLayoutEffect(() => {
        alignGooHighlighters();
        window.addEventListener('resize', () => { alignGooHighlighters() })
        return () => {
            window.removeEventListener('resize', alignGooHighlighters)
        }
    },[])

    useEffect(() => {
        setTransitions();
        dispatch(switchSectionSlider());
        setTimeout(clearTransitions, 600);
    },[currentSection, currentMode])
        
    return (
        <div className='app-layout'>
            <div className='app-header'>
                <div className='goo-highlighters'>
                    <Highlighter location='left-section-slider'/>
                    <Highlighter location='right-section-slider'/>
                    <LogoBack/>
                    <Goo/>
                </div>
                <div className='left-group'>
                    <Gratitude />
                    <Link
                        to='/my-wishes/items/new'
                        className='icon-link'
                        children={ <Icon name='newWish'/> }
                    />
                    <Link
                        to='/my-wishes/lists/new'
                        className='icon-link'
                        children={ <Icon name='newList'/> }
                    />
                </div>
                <div className='center-group'>
                    <Link
                        to={ firstSectionPath }
                        className={ isMyWishes ? 'section my-wishes active' : 'section my-wishes' }
                    >
                        { firstSectionTitle }
                    </Link>
                    <button onClick={ handleLogoClick } className='logo-btn'>
                        <LogoIcon/>
                    </button>
                    <Link
                        to={ secondSectionPath }
                        className={ isMyWishes ? 'section my-invites' : 'section my-invites active' }
                    >
                        { secondSectionTitle }
                    </Link>
                </div>
                <div className='right-group'>
                    <IconButton
                        icon='settings'
                    />
                    <IconButton
                        icon='logout'
                    />
                    <User
                        userName={ currentUser }
                        isPicOnly={ true }
                        picSize='6'
                    />
                </div>
            </div>
            
            <Outlet/>
            
        </div>
    );
}