import React, { useEffect, useMemo } from 'react'
import { useNavigate, useLocation } from 'react-router-dom'
import { useSelector } from 'react-redux'

import { WishButton } from 'components/Button'
import { ImagePlaceholder } from 'components/Icon'
import { StarRating } from 'components/StarRating'

export const WishCard = ({ data, ...rest }) => {
    const w = data;
    const { isInput, value, onChange } = rest
    const selected = value?.includes(w.id)
    // value: [...wishIds]
    if(!w) return null;

    const SelectionMask = () => <div className='selection-mask'/>

    // styling:
    const currentColumnWidth = useSelector(state => state.mCTLayout.columnWidth)
    const heightCorrection = { height: `${Math.round(currentColumnWidth / w.imageAspectRatio)}px` }
    const classes = useMemo(() => {
        let result = 'wishcard fade-in';
        if(isInput) {
            const selection = selected ? ' selected' : ''
            result += ` input${selection}`
        } else
        result += ' view'
        return result
    },[ isInput, selected ])

    // model:
    const currency = w.currency==='rouble' ? ' ₽'
                   : w.currency==='yuan'   ? ' Ұ'
                   : w.currency==='usd'    ? ' $'
                   : w.currency==='euro'   ? ' €'
                   : '';

    const priceBlock = w.price ? (
        <span className='price'>
            {w.price + currency}
        </span>
    ) : null

    // methods:
    const loca = useLocation().pathname
    const slashCorrection = loca.at(-1) === '/'
        ? '' : '/'
    const path = loca + slashCorrection + w.id;
    const navigate = useNavigate();
    const handleCardClick = () => {
        if(isInput) {
            console.log(value, selected)
            const result = selected
            ? [...value].filter(id => id !== w.id)
            : value.concat([w.id]);
            console.log(w.id, result, onChange)
            onChange(result);
        } else navigate(path);
    };

    return (
        <div
            className={classes}
            key={w.id}
            onClick={handleCardClick}
        >
            <StarRating
                readOnly
                rating={w.stars}
            />
            <div className='img-wrapper' style={heightCorrection}>
                { w.image
                    ? <img src={w.image}></img>
                    : <ImagePlaceholder/> 
                }
            </div>
            <div className='wishcard-content'>
                <span className='title'>{w.title}</span>
                {priceBlock}
            </div>
            {
            !isInput &&
            <WishButton wish={w}/> }
            {
            selected &&
            <SelectionMask/> }
        </div>
    )
}