import React, { useState, useLayoutEffect, useEffect } from 'react'
import { useForm, Controller } from 'react-hook-form'
import { useDispatch, useSelector } from 'react-redux'
import { useNavigate } from 'react-router'
import DatePicker from 'react-datepicker'

import { TextInput } from 'components/TextInput'
import { DateSelect } from 'components/DateSelect'
import { IconButton } from 'components/IconButton'
import { Button } from 'components/Button'
import { generateId } from 'getters/idGen'
import { MCTLayout } from 'containers/MCTLayout'
import { putItems } from 'store/mCTLayoutSlice'
import { WishCard } from 'containers/WishCard'
import { CardSelect } from 'components/CardSelect'

const defaultValues = {
    id: '',
    author: '',
    title: '',
    description: '',
    date: new Date(),
    wishIds: [],
}

export const NewListPage = () => {
    // set page orientation:
    const [isLandscape, setIsLandscape] = useState(true)
    const setPageOrientation = () => setIsLandscape(window.innerWidth > 1080);

    useEffect(() => {
        setPageOrientation();
        window.addEventListener('resize', setPageOrientation)
        return () => window.removeEventListener('resize', setPageOrientation)
    },[]);

    // setting form:
    const { handleSubmit, register, setValue, reset, control } = useForm({ defaultValues });
    const currentUser = useSelector(state => state.users.current);

    // form methods:
    const dispatch = useDispatch();
    const navigate = useNavigate()

    const onSubmit = (data, e) => {
        console.log(data);
    }
    const resetForm = () => {
        reset();
    }
    
    // align labels:
    const [maxLabelWidth, setMaxLabelWidth] = useState(0);

    useEffect(() => {
        const labels = document.querySelectorAll('label.text')
        if (labels.length === 0) return;
        const labelWidths = [...labels].map(label => label.offsetWidth);
        setMaxLabelWidth(Math.max(...labelWidths));
    })

    const labelWidth = maxLabelWidth ? maxLabelWidth : null
    
    // bring wishes to MCT layout:
    const allWishes = useSelector(state => state.wishes.ofCurrentUser)
    const wishes = allWishes.filter(wish => wish.state === 'actual')
    useLayoutEffect(() => { dispatch(putItems( wishes )) })

    // set author & id fields:
    useLayoutEffect(() => {
        const id = generateId();
        setValue('id', id);
        setValue('author', currentUser);
    },[])

    const Divider = () => <div className='divider'/>

    return (
        <div className='new-list-page'>
            <form onSubmit={handleSubmit(onSubmit)} >
                <div className='inputs'>
                    <input
                        className='invis'
                        type='text'
                        {...register('id')}
                    />
                    <input
                        className='invis'
                        type='text'
                        {...register('author')}
                    />
                    <div
                        className='line-container'
                        style={ isLandscape
                            ? { flexFlow: 'row nowrap'}
                            : { flexFlow: 'column'}
                        }
                    >
                        <TextInput
                            name='title'
                            register={register}
                            placeholder='Придумайте запоминающееся название'
                            label='Название'
                            labelWidth={labelWidth}
                            required
                        /> 
                        <DateSelect
                            name='date'
                            control={control}
                            label='Дата события'
                            labelWidth={ isLandscape ? null : labelWidth }
                            required
                        />
                    </div> 
                    <TextInput
                        name='description'
                        register={register}
                        placeholder='Что писать? Начните с приветствия. Опишите, каким вы хотели бы видеть мероприятие, что планируется — поход в бар, домашние посиделки или, может быть, что-то экзотичное. Если есть пожелания для гостей — что надеть или взять с собой — укажите их'
                        label='Описание'
                        labelWidth={labelWidth}
                        multiline 
                    />
                </div>
                <Divider/>
                <CardSelect
                    name='wishIds'
                    control={control}
                    options={wishes}
                />
                <Divider/>
                <div className='line-container btn-group'>
                    <IconButton
                        icon='clear'
                        onClick={() => resetForm()}
                    />
                    <IconButton
                        icon='cancel'
                        onClick={() => navigate(-1)}
                    />
                    <Button
                        type='submit'
                        kind='primary'
                        text='Сохранить желание'
                        leftIcon='ok'
                        round
                        onClick={handleSubmit(onSubmit)}
                    />
                </div>
            </form>
        </div> 
    )
}