import { React, useEffect } from 'react'
import { Link, useLocation, useNavigate } from 'react-router-dom'
import { useDispatch, useSelector } from 'react-redux'

import { getWishById, getWishlistById } from 'getters'
import { Icon, WishpageDescriptionPointer } from 'components/Icon'
import { User } from 'components/User'
import { WishButton } from 'components/Button'
import { setDescriptionPointerCoords } from 'store/highlighterSlice'
import { ImagePlaceholder } from 'components/Icon'

export const SingleWishPage = () => {
    const loca = useLocation().pathname;
    const currentWishId = loca.split('/').at(-1);
    const w = getWishById(currentWishId);
    const navigate = useNavigate();
    if(!w) navigate('/page-not-found');

    const currency = w.currency==='rouble' ? ' ₽'
                   : w.currency==='yuan'   ? ' Ұ'
                   : w.currency==='usd'    ? ' $'
                   : w.currency==='euro'   ? ' €'
                   : '';
    
    const OuterLink = () => {
        let url = null
        try {
            url = new URL(w.external);
        } catch(err) {
            return null;
        }
        return (
            <a
                href={ w.external }
                className='inline-link'
            >
                { url.host }
                <Icon name='outerLink' size={22}/>
            </a>
        );
    }

    const WishlistOccurrences = () => {
        const labelText = (!w.wishlistIds.length)
            ? 'Желание не входит ни в один вишлист'
            : (w.wishlistIds.length == 1)
            ? 'Включено в вишлист'
            : 'Включено в вишлисты:'

        const mappedLinks = w.wishlistIds.map((id, index) => {
            const wl = getWishlistById(id);
            const comma = index ? (<span> , </span>) : null
            return (
                <div key={ index }>
                    { comma }
                    <Link
                        className='inline-link'
                        to={`/${ loca.split('/')[1] }/lists/${ wl.id }`}
                    >
                        { wl.title }
                    </Link>
                </div>
        )});

        return (
            <div className='info-field'>
                <span className='label'>{ labelText }</span>
                <div className='links'>{ mappedLinks }</div>
            </div>
    );}

    const UserInfo = () => {
        return (
            <div className='info-field'>
                <span className='label'>Желает</span>
                <User picSize='4' userName={ w.author }/>
            </div>
    )}

    const Description = () => {
        if(!w.description) return null;
        const offset = useSelector(state => state.highlighters.descriptionPointerCoords.x)
        const Pointer = () => {
            return (
                <div
                    className='description-pointer'
                    style={{
                        position: 'relative',
                        left: offset,
                    }}
                >
                    <WishpageDescriptionPointer/>
                </div>
        )}

        return (
            <div className='description'>
                <Pointer/>
                <div
                    className='container'
                    style={{minWidth: `${offset + 77}px`}}
                >{ w.description }</div>
            </div>
    )}

    const PriceLine = () => ( w.price
        ? <span className='price'>{ w.price + currency}</span>
        : null
    )
    
    const dispatch = useDispatch()
    useEffect(() => {
        dispatch(setDescriptionPointerCoords())
    },[])

    return (
        <div className='wish-page'>
            <div className='img-block'>
                { w.image
                    ? <img src={ w.image }></img>
                    : <ImagePlaceholder/>
                }
            </div>
            <div className='content-block'>
                <div className='header'>
                    <span className='title'>{ w.title }</span>
                    <OuterLink/>
                </div>
                <div className='info'>
                    <WishlistOccurrences/>
                    <UserInfo/>
                    <Description/>
                </div>
                <div className='actions'>
                    <PriceLine/>
                    <WishButton
                        wish={ w }
                        kind='primary'
                    />
                </div>
            </div>
        </div>
);}