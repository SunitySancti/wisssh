import React, { useState, useEffect, useRef } from 'react'

import { Icon } from 'components/Icon'
import { IconButton } from 'components/IconButton'
import { Button } from 'components/Button'

export const DropDown = ({
    button,
    options
}) => {
    const [isDropped, setIsDropped] = useState(false);
    const containerRef = useRef(null)

    const openDropDown = e => {
        e.stopPropagation();
        setIsDropped(true)
    }
    const closeDropDown = e => {
        if(containerRef.current && !containerRef.current.contains(e.target)) {
            setIsDropped(false)
        }
    }

    useEffect(() => {
        document.addEventListener('mousedown', closeDropDown);
        return () => { document.removeEventListener('mousedown', closeDropDown) };
    },[containerRef]);

    const Trigger = () => {
        const classes = button.className
            ? 'dd-trigger ' + button.className
            : 'dd-trigger'
        return (
            button.text
            ? <Button
                {...button}
                className={classes}
                onClick={openDropDown}
            />
            : <IconButton
                {...button}
                className={classes}
                onClick={openDropDown}
            />
        );
    }
    const Option = ({ icon, text, onClick }) => (
        <div
            className='dd-option'
            onClick={ onClick }
        >
            { icon && <Icon name={icon}/> }
            { text && <span>{text}</span> }
        </div>
    );

    return (
        <div className='dropdown'>
            <Trigger/>
            { isDropped && (
                <div
                    ref={containerRef}
                    className='dd-container'
                >
                    { options?.map( (option, index) => (
                        <Option key={index} {...option} />
                    ))}
                </div>
            )}
        </div>
    );
}