import React, { useEffect } from 'react'
import { NavLink, useLocation } from 'react-router-dom'
import { useDispatch, useSelector } from 'react-redux'

import { Icon } from 'components/Icon'
import { Highlighter } from 'components/Highlighter'
import { setHighlighterCoordsInModeToggle } from 'store/highlighterSlice'

export const ModeToggle = () => {
    const isMyWishesSection = useLocation().pathname.split('/').at(1) === 'my-wishes';
    const isItemsMode = useLocation().pathname.split('/').at(2) === 'items';

    const wishesItemsLast = useSelector(state => state.history.myWishesSection.itemsModeLast);
    const wishesListsLast = useSelector(state => state.history.myWishesSection.listsModeLast);
    const invitesItemsLast = useSelector(state => state.history.myInvitesSection.itemsModeLast);
    const invitesListsLast = useSelector(state => state.history.myInvitesSection.listsModeLast);

    const itemsPath = isMyWishesSection
                    ? wishesItemsLast
                    : invitesItemsLast

    const listsPath = isMyWishesSection
                    ? wishesListsLast
                    : invitesListsLast

    const Button = ({ to, icon, className }) => {
        return (
            <NavLink to={ to } className={className + ` toggle-button`}>
                <Icon name={ icon }/>
            </NavLink>
        );
    }

    const dispatch = useDispatch();
    useEffect(() => {
        dispatch(setHighlighterCoordsInModeToggle())
    })

    return (
        <div className='items-lists-toggle'>
            <div className='container'>
                <Highlighter location='mode-toggle' className='animated-short'/>
                <Button
                    icon='present'
                    className={ isItemsMode ? 'active' : ''}
                    to={ itemsPath }
                />
                <Button
                    icon='wishlist'
                    className={ isItemsMode ? '' : 'active'}
                    to={ listsPath }
                />
            </div>
        </div>
    );
}