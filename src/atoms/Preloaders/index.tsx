import './styles.scss'

import type { ReactNode } from 'react'


interface SpinnerProps {
    size?: number;          // in rem
    colorTheme?: 'primary' | 'dark' | 'light';
    strokeWidth?: number    // in px, better in range [1, 10]
}

interface WithSpinnerProps extends SpinnerProps {
    children: ReactNode;
    isLoading?: boolean;
    [prop: string]: any
}

interface WishPreloaderProps {
    isLoading?: boolean
}


export const Spinner = ({   // Spinner wants parent container to be positioned (non static)
    size,
    colorTheme,
    strokeWidth
}:  SpinnerProps
) => (                      // Wether to show spinner or not is the responsibility of parent
    <svg
        className={'spinner' + ( colorTheme ? ' ' + colorTheme : ' primary')}
        style={{
            width: `${size || 2}rem`,
            height: `${size || 2}rem`
        }}
        viewBox='0 0 100 100'
        version='1.1'
        xmlns='http://www.w3.org/2000/svg'
        fill='none'
    >
        <circle
            cx='50' cy='50' r='45'
            strokeWidth={ strokeWidth || 7 }
        />
    </svg>
);

export const WithSpinner = ({
    size,
    colorTheme,
    strokeWidth,
    children,
    isLoading,
    ...rest
}:  WithSpinnerProps
) => (
    <div {...rest}>
        <div className={ 'children-container' + ( isLoading ? ' loading' : '' )}>
            { children }
        </div>
        { isLoading && <Spinner {...{ size, colorTheme, strokeWidth }}/> }
    </div>
);

export const WishPreloader = ({
    isLoading
}:  WishPreloaderProps
) => (
    <div className={ 'wish-preloader' + ( isLoading ? ' loading' : '' )}>
        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 66 66">
            <g className='box'>
                <path fillRule="evenodd" d="M26.619 5.807c-4.287 0-6.199 2.833-7.493 5.464-1.21 2.46-.682 6.986-.682 6.986l-1.162-.353c-1.314-.403-2.445-.28-3.537 0-2.66.68-3.36 1.833-3.862 2.663-.052.084-.101.166-.15.243-.48.807-.839 2.138-.435 2.517.404.403.476.395 1.238-.05 1.465-.858 3.856-1.46 5.036-.914-.125.18-.493.493-.933.869-.22.187-.457.39-.692.599-2.678 2.32-7.781 7.667-7.933 8.272-.202.807 1.87 9.155 2.45 9.836.152.202 1.17.497 1.946.68.687 1.843.91 2.901 1.693 6.029 1.49 6.052 2.223 7.893 3.511 8.852l.16.119c.253.188.466.346.693.48 1.22.718 2.86.726 13.306.78l1.404.008c7.301.025 13.769.076 14.4.1 1.517.102 2.653-.428 3.31-1.487.581-.933.733-1.438 1.49-5.22.607-2.901 1.946-7.794 2.426-8.752.278-.555.556-.681 1.718-.807 1.92-.202 2.678-.606 3.613-1.992 1.137-1.716 2.198-7.062 1.768-8.828-.227-.908-1.339-2.22-5.027-5.901l-3.285-3.33s1.63-1.88 2.88-2.85c5.17-4.01 3.336-9.936.077-9.886-2.022 0-3.613.984-4.523 2.775-.834 1.64.966 2.665 2.274 2.497.654-.085 1.233-.355 1.44-.883.505-1.21.935-1.337.935-.278 0 1.06-1.36 2.73-2.83 3.91-.212.17-.407.33-.592.482-1.268 1.04-2.561 2.118-5.076 3.308.043-.432.696-1.825.825-2.438.39-1.855.919-4.375.05-6.573-1.834-4.64-3.558-5.897-6.652-6.061-3.008-.16-4.679.699-6.902 2.388-1.49-1.775-4.544-3.254-6.877-3.254Zm2.836 1.807c1.319.609 3.238 2.17 3.238 2.674-.182.294-.373.611-.559.92-.383.637-.744 1.237-.957 1.526-1.39-1.482-3.133-3.304-5.002-3.127-1.87.176-2.988 1.06-3.714 2.698-1.833 4.135 2.042 8.31 5.185 11.696.347.374 1.005 1.091 1.005 1.091s-.668.303-1.188.303c-1.162 0-1.238-.05-3.183-2.094a46.173 46.173 0 0 0-1.465-1.447c-1.468-1.404-2.448-2.341-2.982-4.505-.558-2.263.4-8.405 4.346-9.735.918-.309 3.284-.92 5.276 0Zm7.71.48c4.549-1.154 7.038-.115 8.872 4.64 1.233 3.196-.565 8.219-1.198 9.207-.855 1.334-4.82 3.454-5.426 3.454-.354 0 1.22-.947 2.155-1.83 2.602-2.396 3.426-5.243 2.752-8.385-.53-2.471-1.72-4.515-3.755-4.892-2.882-.536-5.122.909-6.069 3.113-1.647 3.836-1.162 7.656 1.229 10.026-.481-.084-.879-.142-1.229-.194-.777-.115-1.32-.195-2.022-.444-3.192-6.115.141-13.542 4.69-14.696Zm-9.702 2.881c1.246.672 2.016 1.574 2.742 2.426.156.183.31.364.467.54-.057.301-.12.587-.183.872-.275 1.25-.544 3.278.183 5.865-.508 0-1.582-.003-2.133 0-1.147.008-1.328.025-2.471 0-1.517-2.298-3.014-4.476-3.014-6.333 0-2.877 2.895-4.186 4.41-3.37Zm28.852.927c1.844 1.816-.657 6.254-5.28 9.306-2.678 1.79-7.533 4.313-8.291 4.187-.455-.076.888-.984 3.086-2.094 4.371-2.194 8.64-5.674 9.626-7.818.884-1.967.43-3.455-1.061-3.455-.272 0-.472.384-.698.818-.321.616-.695 1.332-1.399 1.2-.352-.067-1.44-.362-1.263-.816 1.17-3.005 4.067-2.564 5.28-1.328Zm-15.878-.323c2.178.463 3.194 3.778 2.983 6.173-.137 1.555-.676 2.366-1.172 2.934-.508.583-1.992.158-2.961.158-1.52 0-3.969-.065-4.095-.166-.455-.252-1.438-3.443.212-6.737 1.39-2.774 3.141-2.764 5.033-2.362Zm-21.235 8.069c1.535.885 5.802 5.318 5.154 5.494-.924.253-1.213.128-2.022-.882-1.978-2.471-4.604-3.225-8.59-2.951-1.966.135-2.422.488-2.502.67a.997.997 0 0 0-.1-.175c-.202-.294.86-2.396 3.24-2.772 2.382-.377 3.118-.367 4.82.616Zm-7.954 2.44c.016.006.03-.025-.006-.11-.028.063-.01.105.006.11Zm20.139.275c.269.426.535.59-.275.938l-1.83.782s-1.58-1.348-2.375-2.338c.126-.126 1.265 0 2.518 0 1.352 0 1.57 0 1.962.618Zm7.9-.618c.95.043 2.4.128 2.427.196.126.454-3.134 2.697-3.564 2.546-.404-.151-2.425-2.339-2.425-2.742 0-.252 2.35-.055 3.562 0Zm-19.734 1.903c1.805.995 2.15 1.496-.351 1.37-.348-.014-.79-.027-1.244-.04-1.127-.032-2.914-.24-2.968-.312-.278-.252 1.36-1.752 1.84-1.752.228 0 2.04.357 2.723.734Zm32.037.282c.4.324.285.834-.316.77 0 0-2.517.317-4.56.064-.625-.078 2.3-1.348 3.238-1.463.937-.115 1.238.306 1.639.63Zm-15.461.834c.657.429.15 1.095-.218 1.398-.57.47-1.096.494-2.84.494-1.54 0-2.172-.101-2.4-.379-.429-.504.034-1.84.716-2.194.808-.429 3.959.151 4.742.681ZM22.66 26c3.199.314 7.404.731 7.101 1.538-.126.328-1.364.379-8.842.379-4.102 0-7.842-.065-7.842-.065s-1.358-.105-.808-.535c0 0 1.01-1.098 1.475-1.483.177-.147 1.245 0 1.245 0 .35.017 5.071-.09 7.671.166Zm31.295.764c.354.302.666.73.565.982-.151.379-2.627.17-9.55.17-6.846 0-7.705-.05-7.832-.403-.429-1.11.127-1.185 10.232-1.312A136.54 136.54 0 0 0 52.515 26c.47-.03.972.362 1.44.764ZM27.817 29c.1.126.076.353-.05.53-.152.176-1.553 2.16-1.7 2.929-.146.768.433 4.878.74 6.883.306 2.004.075 1.335 0 1.537-.253.63-1.946.908-5.786.908-3.613 0-6.846-.22-9.924-.805-.738-.14-.818-.34-1.018-.805C8.589 36.72 8.227 33 8.465 32.29c.352-1.05 2.254-3.139 2.254-3.139.316-.433.838-.434 1.55-.414.714.02 15.32.062 15.548.264Zm8.261 13.19c.882 0 1.276.447 1.162 1.412-.041.353-.147 1.864-.277 3.73-.227 3.238-.528 7.546-.7 8.738-.058.409-.299.723-1.253.723 0 0-2.282.05-3.833.025-.36-.006-1-.176-1.058-1.185-.113-1.969-.346-9.879-.346-12.711 0-.321.108-.63.69-.732.811-.143 3.022-.074 4.47-.028.505.015.917.028 1.145.028Zm-21.955.655c3.517.238 11.772.054 12.965-.177 1.307-.253 1.335.476 1.335 2.145 0 1.67.219 7.836.32 10.56.043 1.19-.711 1.556-1.597 1.72-.885.164-6.978.22-10.107-.3-.58-.097-1.064-1.16-1.064-1.16-.732-2.501-3.11-10.052-3.371-11.182-.262-1.131.251-1.691 1.519-1.606ZM11.365 30.28c-.404.404-1.538 1.416-1.093 2.31.447.898 7.843.699 9.561.673 1.087-.025 2.047-.126 2.148-.201.253-.278-.919-.772-1.752-.772-1.061 0-5.572-.042-8.423-.398 0-.372.737-1.45.464-1.612-.273-.162-.526-.403-.905 0Zm36.176 25.305c-.227.585-1.129 1.4-1.719 1.51-1.748.325-6.72.075-7.074 0-.452-.113-1.067-.476-.975-1.411.03-.32.072-.736.107-1.286.245-3.784.796-9.2 1.133-10.795l.015-.071c.04-.189.069-.33.147-.436.233-.317.9-.315 3.569-.304.564.002 1.217.005 1.975.005h5.735S47.768 55 47.54 55.585Zm10.254-23.872c-.286.438-.603.61-2.92.61-1.974-.02-7.81.19-9.363.263-1.286.06-.964 1.368-.16 1.312 2.356-.163 7.466-.382 9.523-.363 2.315.022 2.666 0 3.259-.439-.074 4.229-.82 5.57-1.54 6.624-.796 1.166-1.738 1.51-2.638 1.57-5.252.349-14.391.018-14.543-.234-.076-.126.076-1.74.38-3.58.605-3.986.555-4.843-.506-6.357-1.061-1.563-1.036-1.89.303-2.017 2.729-.227 14.605 0 16.204.189 1.017.12 2.287 1.984 2 2.422Zm-18.889 1.535c-.105-1.035-2.449-4.5-2.727-4.903-.454-.655-.58-.68-2.425-.655-1.061.025-2.211.048-2.501.15-.967.343-2.947 2.293-3.635 4.127-.241.644.414 1.125.921 1.095 1.46-.088 3.989-.21 7.074 0 1.037.07.073.924-1.251.868-4.38-.186-6.056.156-6.056.156-.59.126-.738.25-.688.858.177 2.018.296 3.815.527 5.552a.64.64 0 0 0 .394.535l8.26.025c.362-.025.987-.025 1.264-.903.098-.308.964-5.723.843-6.905Z" clipRule="evenodd"/>
            </g>
            <g className='outline'>
                <path fillRule="evenodd" d="M55 1H11C5.477 1 1.5 5.477 1.5 11v43c0 5.523 3.977 10 9.5 10h44c5.523 0 9.5-4.477 9.5-10V11c0-5.523-3.977-10-9.5-10ZM11 0C4.925 0 0 4.925 0 11v44c0 6.075 4.925 11 11 11h44c6.075 0 11-4.925 11-11V11c0-6.075-4.925-11-11-11H11Z" clipRule="evenodd"/>
            </g>
        </svg>
    </div>
);

export const NavbarEllipsis = () => (
    <div className='navbar-ellipsis'>
        <div className='circle first'/>
        <div className='circle second'/>
        <div className='circle third'/>
    </div>
);
